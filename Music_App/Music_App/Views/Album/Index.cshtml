@model Music_App.Models.ViewModels.AlbumViewModel
@{
    ViewData["Title"] = "Albums";
}

@* Element for albums grid *@
<div id="grid-@(ViewData["Title"])" class="container">

    @* Element for albums grid title *@
    <h1 id="grid_Title-@(ViewData["Title"])">Albums</h1>

    @* Iterate over all albums *@
    @for (int i = 0; i < Model.Albums.Count; i += 3)
    {
        @* Define(declare/initialise) three albums per row using LINQ *@
        Album[] albumsPerRow = Model.Albums.Skip(i).Take(3).ToArray();

        @* Element for albums row *@
        <div id="row-@(ViewData["Title"])" class="row my-3 text-center">

            @* Iterate over albums per parent LINQ result *@
            @foreach (Album album in albumsPerRow)
            {
                @* Element for album column *@
                <div id="column-@(album.Title)-@(album.Artist)" class="col-sm-4">

                    @* Element for album card *@
                    <div id="card-album-@(album.Title)-@(album.Artist)" class="card px-5 py-4" @* style="width: 18rem;" *@>

                        @* Element for album image *@
                        <img id="card-album-img-@(album.Title)-@(album.Artist)" class="card-img-top" src="@album.ImageURL" alt="Image of the album cover" onerror="this.src='/img/default_image.jpg'">

                        @* Element for album body *@
                        <div id="card-album-body-@(album.Title)-@(album.Artist)" class="card-body">

                            @* Element for album Title/Artist *@
                            <h5 id="card-album-title-@(album.Title)-@(album.Artist)" class="card-title mb-0">@album.Title</h5>
                            <p id="card-album-artist-@(album.Title)-@(album.Artist)" class="card-text mt-0 fs-5">@album.Artist</p>

                            @* Element for album rating *@
                            <div class="small-ratings">
                                @{
                                    Func<int, bool> doesRatingWarrantNthStar = (j) => j <= album.Rating;
                                    for (int j = 1; doesRatingWarrantNthStar(j); j++)
                                    {
                                        <i class="bi bi-star-fill ratingStar__color"></i>
                                    }

                                    Func<bool> doesRatingHaveFractionalPart = () => (album.Rating % 1 != 0);
                                    Func<bool> doesRatingWarrantFinalHalfStar = () => (Math.Ceiling(album.Rating) - album.Rating) <= 0.5;
                                    if (doesRatingHaveFractionalPart() && doesRatingWarrantFinalHalfStar())
                                    {
                                        <i class="bi bi-star-half ratingStar__color"></i>
                                    }
                                }
                            </div>

                            @* Element for album details view*@
                            <a class="btn btn-primary mt-2" asp-controller="Album" asp-action="AlbumDetails" asp-route-albumId="@album.Id">Details</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>
